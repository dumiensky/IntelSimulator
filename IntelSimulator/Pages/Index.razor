@page "/"
@using IntelSimulator.Models

<div class="row">
    <div class="col">
        <EditForm EditContext="_formContext" OnValidSubmit="ChangeValues">
            <DataAnnotationsValidator />

            <div class="form-row">
                <div class="btn-group mb-2 d-flex w-100">
                    <button class="btn btn-outline-info" @onclick="() => _formModel.Reset()">
                        RESET
                    </button>
                    <button class="btn btn-outline-info" @onclick="() => _formModel.Randomize()">
                        RANDOM
                    </button>
                </div>
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text">AX</div>
                    </div>
                    <input type="text" class="form-control" value="@_formModel.AX_HEX" disabled/>
                    <InputText @bind-Value="_formModel.Inputs.AX" class="form-control" />
                </div>
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text">BX</div>
                    </div>
                    <input type="text" class="form-control" value="@_formModel.BX_HEX" disabled />
                    <InputText @bind-Value="_formModel.Inputs.BX" class="form-control" />
                </div>
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text">CX</div>
                    </div>
                    <input type="text" class="form-control" value="@_formModel.CX_HEX" disabled />
                    <InputText @bind-Value="_formModel.Inputs.CX" class="form-control" />
                </div>
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text">DX</div>
                    </div>
                    <input type="text" class="form-control" value="@_formModel.DX_HEX" disabled />
                    <InputText @bind-Value="_formModel.Inputs.DX" class="form-control" />
                </div>
                <div class="input-group">
                    <button class="btn btn-block btn-success" type="submit">
                        Wpisz nowe wartości
                    </button>
                </div>
            </div>
        </EditForm>
    </div>
    <div class="col">

    </div>
</div>

@code
{
    EditContext _formContext;
    SimulatorModel _formModel = new SimulatorModel();

    protected override void OnInitialized()
    {
        _formContext = new EditContext(_formModel.Inputs);
    }

    private void ChangeValues()
    {
        _formModel.AX = ParseIfNotEmpty(_formModel.Inputs.AX) ?? _formModel.AX;
        _formModel.BX = ParseIfNotEmpty(_formModel.Inputs.BX) ?? _formModel.BX;
        _formModel.CX = ParseIfNotEmpty(_formModel.Inputs.CX) ?? _formModel.CX;
        _formModel.DX = ParseIfNotEmpty(_formModel.Inputs.DX) ?? _formModel.DX;

        _formModel.Inputs.Clear();
    }

    private int? ParseIfNotEmpty(string input)
    {
        if (!string.IsNullOrWhiteSpace(input))
        {
            return int.Parse(input, System.Globalization.NumberStyles.HexNumber);
        }

        return null;
    }
}