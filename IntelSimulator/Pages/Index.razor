@page "/"
@using IntelSimulator.Models

<div class="row">
    <div class="col">
        <EditForm Model="_registers.Inputs" OnValidSubmit="() => _registers.ApplyInputs()">
            <DataAnnotationsValidator />

            <div class="form-row">
                <div class="btn-group mb-2 d-flex w-100">
                    <button class="btn btn-outline-info" @onclick="() => _registers.Reset()">
                        RESET
                    </button>
                    <button class="btn btn-outline-info" @onclick="() => _registers.Randomize()">
                        RANDOM
                    </button>
                </div>
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text">AX</div>
                    </div>
                    <input type="text" class="form-control" value="@_registers.AX_HEX" disabled/>
                    <InputText @bind-Value="_registers.Inputs.AX" class="form-control" />
                </div>
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text">BX</div>
                    </div>
                    <input type="text" class="form-control" value="@_registers.BX_HEX" disabled />
                    <InputText @bind-Value="_registers.Inputs.BX" class="form-control" />
                </div>
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text">CX</div>
                    </div>
                    <input type="text" class="form-control" value="@_registers.CX_HEX" disabled />
                    <InputText @bind-Value="_registers.Inputs.CX" class="form-control" />
                </div>
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text">DX</div>
                    </div>
                    <input type="text" class="form-control" value="@_registers.DX_HEX" disabled />
                    <InputText @bind-Value="_registers.Inputs.DX" class="form-control" />
                </div>
                <div class="input-group">
                    <button class="btn btn-block btn-success" type="submit">
                        Wpisz nowe wartości
                    </button>
                </div>
            </div>
        </EditForm>
        <hr class="my-4" />
        <EditForm Model="_basicRegisterSelector">
            <div class="row">
                <div class="col-lg">
                    <label class="form-label">Źródło:</label>
                    <InputSelect @bind-Value="_basicRegisterSelector.Source" class="custom-select">
                        <option value="@Register.AX">AX</option>
                        <option value="@Register.BX">BX</option>
                        <option value="@Register.CX">CX</option>
                        <option value="@Register.DX">DX</option>
                    </InputSelect>
                </div>
                <div class="col-lg">
                    <label class="form-label">Cel:</label>
                    <InputSelect @bind-Value="_basicRegisterSelector.Destination" class="custom-select">
                        <option value="@Register.AX">AX</option>
                        <option value="@Register.BX">BX</option>
                        <option value="@Register.CX">CX</option>
                        <option value="@Register.DX">DX</option>
                    </InputSelect>
                </div>
            </div>
            <div class="btn-group mt-2 d-flex w-100">
                <button class="btn btn-outline-info" @onclick="_basicRegisterOperator.MOV">
                    MOV
                </button>
                <button class="btn btn-outline-info" @onclick="_basicRegisterOperator.XCHG">
                    XCHG
                </button>
            </div>
        </EditForm>
    </div>
    <div class="col">
        
    </div>
</div>

@code
{
    FlowType _flow = FlowType.FromRegisterToMemory;
    AddressType _addressType = AddressType.Index;

    Registers _registers = new Registers();
    BasicRegisterSelector _basicRegisterSelector = new BasicRegisterSelector();

    BasicRegisterOperator _basicRegisterOperator;

    protected override void OnInitialized()
    {
        _basicRegisterOperator = new BasicRegisterOperator(_registers, _basicRegisterSelector);
    }
}